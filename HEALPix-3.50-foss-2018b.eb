name = 'HEALPix'
version = '3.50'

homepage = 'http://healpix.sourceforge.net/'
description = """Hierarchical Equal Area isoLatitude Pixelation of a sphere."""

toolchain = {'name': 'foss', 'version': '2018b'}
toolchainopts = {'pic': True}

source_urls = [SOURCEFORGE_SOURCE]
sources = ['Healpix_3.50_2018Dec10.tar.gz']
patches = ['HEALPix_noXtest.patch']
checksums = [
    'ec9378888ef8365f9a83fa82e3ef3b4e411ed6a63aca33b74a6917c05334bf4f',  # Healpix_3.50_2018Dec10.tar.gz
    'ec82c8b2beb80937c83d2e545e26ade08b3647ab5a3401c8703e6523b0782c08',  # HEALPix_noXtest.patch
]

dependencies = [('CFITSIO', '3.45')]

sanity_check_paths = {
    'files': [
        'bin/alteralm',
        'bin/anafast',
        'bin/hotspot',
        'bin/map2gif',
        'bin/median_filter',
        'bin/plmgen',
        'bin/sky_ng_sim',
        'bin/sky_ng_sim_bin',
        'bin/smoothing',
        'bin/synfast',
        'bin/ud_grade',
        'lib/libchealpix.a',
        'lib/libgif.a',
        'lib/libhealpix.a',
        'lib/libhpxgif.a',
        'lib/libchealpix.so',
    ],
    'dirs': ['include'],
}

sanity_check_commands = [
    ('cd %(installdir)s && make test &> build/testresults.txt'),
    ('[ "$(cat %(installdir)s/build/testresults.txt | grep -c \'test completed\')" -eq "4" ]'),
    ('[ "$(cat %(installdir)s/build/testresults.txt | grep -c \'normal completion\')" -eq "10" ]')
]

modextrapaths = {
    'PATH': 'src/cxx/generic_gcc/bin',
    'LIBRARY_PATH': 'src/cxx/generic_gcc/lib',
    'CPATH': 'src/cxx/generic_gcc/include',
}

moduleclass = 'astro'
